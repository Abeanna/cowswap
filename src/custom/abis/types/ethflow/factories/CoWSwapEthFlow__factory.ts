/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CoWSwapEthFlow,
  CoWSwapEthFlowInterface,
} from "../CoWSwapEthFlow";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICoWSwapSettlement",
        name: "_cowSwapSettlement",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_wrappedNativeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EthTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectEthAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "NotAllowedToDeleteOrder",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "OrderIsAlreadyOwned",
    type: "error",
  },
  {
    inputs: [],
    name: "ReceiverMustBeSet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "sellToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "kind",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "sellTokenBalance",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "buyTokenBalance",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct GPv2Order.Data",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ICoWSwapOnchainOrders.OnchainSigningScheme",
            name: "scheme",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct ICoWSwapOnchainOrders.OnchainSignature",
        name: "signature",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "OrderPlacement",
    type: "event",
  },
  {
    inputs: [],
    name: "cowSwapSettlement",
    outputs: [
      {
        internalType: "contract ICoWSwapSettlement",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "int64",
            name: "quoteId",
            type: "int64",
          },
        ],
        internalType: "struct EthFlowOrder.Data",
        name: "order",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "int64",
            name: "quoteId",
            type: "int64",
          },
        ],
        internalType: "struct EthFlowOrder.Data",
        name: "order",
        type: "tuple",
      },
    ],
    name: "deleteOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "validTo",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNativeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200157938038062001579833981016040819052620000349162000138565b816200004b816200006c60201b62000a621760201c565b6080525060016000556001600160a01b0391821660a0521660c05262000177565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf606082015246608082018190526001600160a01b03831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b6001600160a01b03811681146200013557600080fd5b50565b600080604083850312156200014c57600080fd5b825162000159816200011f565b60208401519092506200016c816200011f565b809150509250929050565b60805160a05160c0516113b7620001c26000396000818160d20152818161051101526106a8015260008181610202015261092d01526000818161074e0152610dbe01526113b76000f3fe6080604052600436106100655760003560e01c80639c3f1e90116100435780639c3f1e901461013a578063b52e0d64146101ce578063ec30bb88146101f057600080fd5b80631626ba7e1461006a57806317fcb39b146100c0578063322bba2114610119575b600080fd5b34801561007657600080fd5b5061008a610085366004610f18565b610224565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b3480156100cc57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b7565b61012c610127366004610fd5565b610314565b6040519081526020016100b7565b34801561014657600080fd5b5061019d610155366004610fee565b60016020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900463ffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835263ffffffff9091166020830152016100b7565b3480156101da57600080fd5b506101ee6101e9366004610fd5565b610630565b005b3480156101fc57600080fd5b506100f47f000000000000000000000000000000000000000000000000000000000000000081565b600082815260016020908152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff81168083527401000000000000000000000000000000000000000090910463ffffffff169282019290925290158015906102a55750805173ffffffffffffffffffffffffffffffffffffffff90811614155b80156102bb575042816020015163ffffffff1610155b156102e957507f1626ba7e00000000000000000000000000000000000000000000000000000000905061030e565b507fffffffff0000000000000000000000000000000000000000000000000000000090505b92915050565b6000600260005403610387576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055346040830135146103c9576040517f8b6ebb4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051808201909152338152600090602081016103ed60e0860160c08701611020565b63ffffffff169052604080518082019091529091506000908082815260200130604051602001610448919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290529050600061048e61012086016101008701611054565b6020808501516040516104d593920160c09290921b825260e01b7fffffffff00000000000000000000000000000000000000000000000000000000166008820152600c0190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052835190915061054c906105457f000000000000000000000000000000000000000000000000000000000000000061053f368a90038a018a6110a3565b90610b22565b8484610cf1565b60008181526001602052604090205490945073ffffffffffffffffffffffffffffffffffffffff16156105ae576040517f56a1d2b20000000000000000000000000000000000000000000000000000000081526004810185905260240161037e565b50506000828152600160208181526040832084518154929095015163ffffffff1674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090921673ffffffffffffffffffffffffffffffffffffffff909516949094171790925555919050565b60026000540361069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161037e565b600260009081556106d67f000000000000000000000000000000000000000000000000000000000000000061053f368590038501856110a3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a082209152604080517f190100000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006002820152602281019290925260429091206000818152600160209081529083902083518085019094525473ffffffffffffffffffffffffffffffffffffffff8082168086527401000000000000000000000000000000000000000090920463ffffffff1692850192909252939450909214806107ff5750805173ffffffffffffffffffffffffffffffffffffffff16155b80610836575042816020015163ffffffff16101580156108365750805173ffffffffffffffffffffffffffffffffffffffff163314155b15610870576040517f96d4fcee0000000000000000000000000000000000000000000000000000000081526004810183905260240161037e565b600082815260016020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff1790558051603880825260608201909252918201818036833750505060a08501519091506108ed90829085903090610df3565b6040517f2479fb6e00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632479fb6e906109629085906004016111a1565b6020604051808303816000875af1158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a591906111b4565b85606001516109b491906111cd565b90506000836000015173ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610a14576040519150601f19603f3d011682016040523d82523d6000602084013e610a19565b606091505b5050905080610a54576040517f6d963f8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505060016000555050505050565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf6060820152466080820181905273ffffffffffffffffffffffffffffffffffffffff831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b604080516101808101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101608201529083015173ffffffffffffffffffffffffffffffffffffffff16610bd1576040517fefc9ccdf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518061018001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015173ffffffffffffffffffffffffffffffffffffffff168152602001846040015181526020018460600151815260200163ffffffff80168152602001846080015181526020018460a0015181526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018460e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9815250905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff167fcf5f9de2984132265203b5c335b25727702ca77262ff622e136baa7362bf1da9858585604051610d3d93929190611267565b60405180910390a25050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f190100000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006002820152602281019190915260429020919050565b6038845114610e5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a2075696420627566666572206f766572666c6f7700000000000000604482015260640161037e565b60388401526034830152602090910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715610ec357610ec3610e70565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f1057610f10610e70565b604052919050565b60008060408385031215610f2b57600080fd5b8235915060208084013567ffffffffffffffff80821115610f4b57600080fd5b818601915086601f830112610f5f57600080fd5b813581811115610f7157610f71610e70565b610fa1847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610ec9565b91508082528784828501011115610fb757600080fd5b80848401858401376000848284010152508093505050509250929050565b60006101208284031215610fe857600080fd5b50919050565b60006020828403121561100057600080fd5b5035919050565b803563ffffffff8116811461101b57600080fd5b919050565b60006020828403121561103257600080fd5b61103b82611007565b9392505050565b8035600781900b811461101b57600080fd5b60006020828403121561106657600080fd5b61103b82611042565b803573ffffffffffffffffffffffffffffffffffffffff8116811461101b57600080fd5b8035801515811461101b57600080fd5b600061012082840312156110b657600080fd5b6110be610e9f565b6110c78361106f565b81526110d56020840161106f565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261110e60c08401611007565b60c082015261111f60e08401611093565b60e0820152610100611132818501611042565b908201529392505050565b6000815180845260005b8181101561116357602081850181015186830182015201611147565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061103b602083018461113d565b6000602082840312156111c657600080fd5b5051919050565b8181038181111561030e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000815160028110611242577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8084525060208201516040602085015261125f604085018261113d565b949350505050565b835173ffffffffffffffffffffffffffffffffffffffff16815260006101c060208601516112ad602085018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408601516112d5604085018273ffffffffffffffffffffffffffffffffffffffff169052565b50606086015160608401526080860151608084015260a086015161130160a085018263ffffffff169052565b5060c086015160c084015260e086015160e0840152610100808701518185015250610120808701516113368286018215159052565b505061014086810151908401526101608087015190840152610180830181905261136281840186611207565b90508281036101a0840152611377818561113d565b969550505050505056fea2646970667358221220d729df80554557281c4441e53211905ba1d0f265900bb423422e9d651be748d664736f6c63430008100033";

export class CoWSwapEthFlow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _cowSwapSettlement: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CoWSwapEthFlow> {
    return super.deploy(
      _cowSwapSettlement,
      _wrappedNativeToken,
      overrides || {}
    ) as Promise<CoWSwapEthFlow>;
  }
  getDeployTransaction(
    _cowSwapSettlement: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cowSwapSettlement,
      _wrappedNativeToken,
      overrides || {}
    );
  }
  attach(address: string): CoWSwapEthFlow {
    return super.attach(address) as CoWSwapEthFlow;
  }
  connect(signer: Signer): CoWSwapEthFlow__factory {
    return super.connect(signer) as CoWSwapEthFlow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoWSwapEthFlowInterface {
    return new utils.Interface(_abi) as CoWSwapEthFlowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoWSwapEthFlow {
    return new Contract(address, _abi, signerOrProvider) as CoWSwapEthFlow;
  }
}
